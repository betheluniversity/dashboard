from app.models import *
from app import db
from flask import session


class DBController(object):
    def __init__(self):
        self.db_session = db.session

    def get_channels(self):
        channels = self.db_session.query(User, Tab, Row, Column, Channel)\
            .join(Tab)\
            .join(Row)\
            .join(Column)\
            .join(Channel)\
            .filter(User.username==session['username'])\
            .order_by(Tab.order)\
            .order_by(Row.order)\
            .order_by(Column.column_num)\
            .order_by(Column.order)\
            .all()

        return channels

    def get_tabs(self):
        tabs = self.db_session.query(User, Tab)\
            .join(Tab)\
            .filter(User.username==session['username'])\
            .order_by(Tab.order)\
            .all()

        return tabs

    def clear_db_generated_content(self):
        User.query.delete()
        UserRole.query.delete()
        Tab.query.delete()
        Row.query.delete()
        Column.query.delete()

        return True

    def create_new_user(self):
        user = User.query.filter(User.username == session['username']).first()

        # if user does not exist, then . . .
        if user is None:

            # create user
            new_user = User(username=session['username'])
            self.db_session.add(new_user)
            self.db_session.commit() # commit, in order to get autogenerated id's

            # create roles
            new_user_role = UserRole(user_id=new_user.id, role_id=2)
            self.db_session.add(new_user_role)

            # create tab
            new_tab = Tab(user_id=new_user.id, name='Home', order=1)
            self.db_session.add(new_tab)
            self.db_session.commit()

            # create row
            row1 = Row(new_tab.id, 1)
            self.db_session.add(row1)
            self.db_session.commit()

            # create row1 cols
            new_column = Column(row1.id, 0, 0, 'test-channel00', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 0, 2, 'test-channel02', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 0, 1, 'test-channel01', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 1, 0, 'test-channel10', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 1, 1, 'test-channel01', '1')
            self.db_session.add(new_column)

            # create row
            row2 = Row(new_tab.id, 2)
            self.db_session.add(row2)
            self.db_session.commit()

            # create row2 cols
            new_column = Column(row2.id, 0, 0, 'test-channel00', '1')
            self.db_session.add(new_column)

            new_column = Column(row2.id, 1, 0, 'test-channel10', '1')
            self.db_session.add(new_column)

            # create tab
            new_tab = Tab(user_id=new_user.id, name='Another Tab', order=2)
            self.db_session.add(new_tab)
            self.db_session.commit()

            # create row
            row1 = Row(new_tab.id, 1)
            self.db_session.add(row1)
            self.db_session.commit()

            # create row1 cols
            new_column = Column(row1.id, 0, 0, 'test-channel00', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 0, 2, 'test-channel02', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 0, 1, 'test-channel01', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 0, 3, 'test-channel10', '1')
            self.db_session.add(new_column)

            new_column = Column(row1.id, 1, 0, 'test-channel01', '1')
            self.db_session.add(new_column)

            # create row
            row2 = Row(new_tab.id, 2)
            self.db_session.add(row2)
            self.db_session.commit()

            # create row2 cols
            new_column = Column(row2.id, 0, 0, 'test-channel00', '1')
            self.db_session.add(new_column)

            new_column = Column(row2.id, 1, 0, 'test-channel10', '1')
            self.db_session.add(new_column)

            self.db_session.commit()

            self.db_session.commit()
            return True

        else:
            # user exists, so exit
            return False

    def init_db(self):
        if Role.query.filter(Role.name=='ROLE_ADMIN').first() is None:
            new_role = Role(name='ROLE_ADMIN')
            self.db_session.add(new_role)
            new_role = Role(name='ROLE_VIEWER')
            self.db_session.add(new_role)

            new_channel = Channel('My Test Channel', 'test_channel', 'TestChannel', 6)
            self.db_session.add(new_channel)

            self.db_session.commit()
            return True
        else:
            return False
